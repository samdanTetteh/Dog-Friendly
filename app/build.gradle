plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-android'
}

android {
    compileSdkVersion ConfigData.androidCompileSdk

    defaultConfig {
        applicationId "com.ijikod.dog_friendly"
        minSdkVersion ConfigData.androidMinSdk
        targetSdkVersion ConfigData.androidTargetSdk
        versionCode ConfigData.versionCode
        versionName ConfigData.versionName

        testInstrumentationRunner = "com.ijikod.com.ijikod.dog_friendly.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/rxjava.properties'
        pickFirst 'META-INF/gradle/incremental.annotation.processors'
    }

    kapt {
        correctErrorTypes = true
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        //for robolectric http://robolectric.org/migrating/#migrating-to-40
        animationsDisabled = true
    }
}

dependencies {

    implementation project(path: ':domain')
    implementation project(path: ':data')


    implementation Libs.androidKtx
    implementation Libs.appCompat
    implementation Libs.materialDesign
    implementation Libs.constraintLayout
    implementation Libs.recyclerView
    implementation Libs.androidHilt
    implementation Libs.lifeCycle
    implementation Libs.retrofit
    implementation Libs.okHttp
    implementation Libs.gson
    implementation Libs.rxJava
    implementation Libs.rxRelay
    implementation Libs.rxAndroid
    implementation Libs.rxBindings
    implementation Libs.retrofitRxAdapter
    implementation Libs.navigationFragmentKtx
    implementation Libs.navigationUIKtx
    implementation Libs.fragment
    implementation Libs.picasso
    implementation Libs.espressoIdleResource



    // Instrumentation Tests
    kapt Libs.hiltAndroidCompiler
    debugImplementation Libs.fragmentTesting
    androidTestImplementation Libs.junit
//    androidTestImplementation Libs.googleTruth
    androidTestImplementation Libs.mockito
    androidTestImplementation Libs.mockitoAndroid
    androidTestImplementation Libs.androidxTestCore
    androidTestImplementation Libs.androidxTestRunner
    androidTestImplementation Libs.androidxTestRules
    androidTestImplementation Libs.navigationTesting
    androidTestImplementation Libs.espressoTest
    androidTestImplementation Libs.androidJunitTest
    androidTestImplementation Libs.espressoIntents
    androidTestImplementation Libs.hiltTesting
    androidTestImplementation Libs.mockWebServer
    androidTestImplementation Libs.okHttpIdleResource
    androidTestImplementation (Libs.espressoTestContrib){
        exclude group: 'com.android.support', module: 'appcompat'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
    }

    androidTestImplementation('androidx.test.espresso:espresso-accessibility:' + Versions.espressoCore) {
        exclude group: 'org.checkerframework', module: 'checker'
    }

    testImplementation Libs.robolecttic
    testImplementation Libs.mockitoKotlin
    testImplementation Libs.mockK

}